name: SonarQube-Workflow
on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:  
jobs:
  sonarQube:
    name: SonarQube-Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@master
      - name: Checkout GitHub Action Repo
        uses: actions/checkout@master
        with:
          repository: EnterpriseDB/edb-github-actions.git
          ref: master
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: .github/actions/edb-github-actions
      - name: SonarQube Scan
        uses: ./.github/actions/edb-github-actions/sonarqube
        with:
            REPO_NAME: '${{github.event.repository.name}}'
            SONAR_PROJECT_KEY: '${{secrets.SONARQUBE_PROJECTKEY}}'
            SONAR_URL: '${{secrets.SONARQUBE_URL}}'
            SONAR_LOGIN: '${{secrets.SONARQUBE_LOGIN}}'
            PULL_REQUEST_KEY: '${{github.event.number}}'
            PULL_REQUEST_BRANCH: '${{github.head_ref}}'
            PULL_REQUEST_BASE_BRANCH: '${{github.base_ref}}'
            REPO_DEFAULT_BRANCH: '${{github.event.repository.default_branch}}'
            REPO_EXCLUDE_FILES: '*properties*,**/src/test/**/*,**/*.sql,**/docs/**/*,**/*/*.java'
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_MESSAGE: '${{ secrets.PRODUCT}} sonarqube scan finished that was triggered by a github action. ${{secrets.SONARQUBE_URL}}/dashboard?id=${{secrets.SONARQUBE_PROJECTKEY}}'
            SLACK_TITLE: '${{ secrets.PRODUCT}} SonarQube scan.'
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
